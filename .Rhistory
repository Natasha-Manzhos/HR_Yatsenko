library(ggplot2)
library(caret)
library(corrplot)
library(e1071)
library(car)
library(nortest)
library(pastecs)
library(stats)
library(MASS)
library(leaps)
library(gridExtra)
dataset <- read.csv("HR_comma_sep.csv")
num.cols <- sapply(dataset,is.numeric)
cor.data <- cor(dataset[,num.cols])
par(mfrow=c(1,1))
corrplot(cor.data, method = "pie")
ad.test(dataset$time_spend_company)
cvm.test(dataset$time_spend_company)
lillie.test(dataset$time_spend_company)
stat.desc(dataset$time_spend_company, basic=TRUE, desc=TRUE, norm=FALSE, p=0.95)
vif(lm(formula = left ~ . ,data = dataset))
aggregate(dataset[,num.cols], by=list(dataset$left, dataset$salary), FUN=mean, na.rm=TRUE)
aggregate(dataset[,num.cols], by=list(dataset$left, dataset$salary), FUN=sd,   na.rm=TRUE)
ataset$left                  <- dataset$left
dataset$promotion_last_5years <- as.factor(dataset$promotion_last_5years)
dataset$Work_accident         <- as.factor(dataset$Work_accident)
dataset$salary                <- ordered(dataset$salary, c("low","medium" ,"high"))
summary(dataset)
str(dataset)
num.cols <- sapply(dataset,is.numeric)
cor.data <- cor(dataset[,num.cols])
corrplot(cor.data, method = "color")
vif(glm(formula = left ~ . ,family = binomial,data = dataset))
RG <- round(rgamma(length(dataset$time_spend_company),mean(dataset$time_spend_company),
sd(dataset$time_spend_company)),0)
cor.test(RG,dataset$time_spend_company)
par(mfrow=c(1,2))
hist(RG,xlab="rgamma",main="Comparison rgamma and time_spend_company",probability=TRUE,breaks=19,ylim=c(0,1))
lines(density(RG,bw=0.2),ylim=c(0,1))
hist(dataset$time_spend_company,xlab="time_spend_company", main=" ", probability=TRUE,breaks=19,ylim=c(0,1))
lines(density(dataset$time_spend_company,bw=0.2),ylim=c(0,1))
par(mfrow=c(1,1))
featurePlot(x = dataset[,c("satisfaction_level",
"average_montly_hours",
"time_spend_company")],
y = factor(dataset$left),plot = "pairs",
## Add a key at the top
auto.key = list(columns = 2))
ggplot(dataset, aes(x = average_montly_hours,color=left,fill=left))+ geom_histogram()+facet_wrap(~left,nrow=2)
g1<-ggplot(dataset, aes(x = satisfaction_level, colour = factor(left), fill = factor(left)))+ geom_histogram()
g2<-ggplot(dataset, aes(x = last_evaluation, colour = factor(left), fill = factor(left)))+ geom_histogram()
g3<-ggplot(dataset, aes(x = time_spend_company, colour = factor(left), fill = factor(left)))+ geom_histogram()
g4<-ggplot(dataset, aes(x = time_spend_company, colour = factor(salary), fill = factor(salary)))+ geom_histogram()
grid.arrange(g1,g2,g3,g4, nrow=2, ncol=2)
g5<-ggplot(dataset, aes(x = satisfaction_level, colour = factor(left)))+ geom_density()
g6<-ggplot(dataset, aes(x = last_evaluation, colour = factor(left)))+ geom_density()
g7<-ggplot(dataset, aes(x = time_spend_company, colour = factor(left)))+ geom_density()
grid.arrange(g5,g6,g7, nrow=3, ncol=1)
g8<-ggplot(dataset, aes(x = satisfaction_level, colour = factor(salary)))+geom_density()
g9<-ggplot(dataset, aes(x = last_evaluation, colour = factor(salary)))+ geom_density()
g10<-ggplot(dataset, aes(x = time_spend_company, colour = factor(salary)))+ geom_density()
grid.arrange(g8,g9,g10, nrow=3, ncol=1)
set.seed(123)
split = createDataPartition(y=dataset$left, p=0.75, list=FALSE)
training <- dataset[split, ]
testing <- dataset[-split,]
model_Log_Reg_b <- glm(left ~ satisfaction_level +
last_evaluation +
number_project +
average_montly_hours +
time_spend_company +
Work_accident +
promotion_last_5years +
salary +
sales,
data=training,family = binomial(link="logit"))
model_Log_Reg_qb <- glm(left ~ satisfaction_level +
last_evaluation +
number_project +
average_montly_hours +
time_spend_company +
Work_accident +
promotion_last_5years +
salary +
sales,
data=training,family = quasibinomial)
model_Log_Reg_b_r <- glm(left ~ satisfaction_level+
last_evaluation +
number_project +
average_montly_hours +
time_spend_company,
data=training,family = binomial(link="logit"))
summary(model_Log_Reg_b)
summary(model_Log_Reg_qb)
summary(model_Log_Reg_b_r)
anova(model_Log_Reg_b_r,model_Log_Reg_b,test="Chisq")
pchisq(summary(model_Log_Reg_qb)$dispersion * model_Log_Reg_qb$df.residual,
model_Log_Reg_qb$df.residual, lower = F)
exp(coef(model_Log_Reg_b))
durbinWatsonTest(model_Log_Reg_b)
crPlots(model_Log_Reg_b)
ax<-seq(1,nrow(training),by=1)
c1<-ggplot(training, aes(x=ax, y = hatvalues(model_Log_Reg_b)    )) + geom_jitter()
c2<-ggplot(training, aes(x=ax, y = rstudent(model_Log_Reg_b)       )) + geom_jitter()
c3<-ggplot(training, aes(x=ax, y = cooks.distance(model_Log_Reg_b) )) + geom_jitter()
c4<-ggplot(training, aes(x=ax, y = residuals(model_Log_Reg_b) )) + geom_jitter()
grid.arrange(c1,c2,c3, c4,nrow=2, ncol=2)
c5<-ggplot(training, aes(x=fitted(model_Log_Reg_b), y = residuals(model_Log_Reg_b) )) + geom_jitter()
c6<-ggplot(training, aes(x=fitted(model_Log_Reg_b), y = cooks.distance(model_Log_Reg_b) )) + geom_jitter()
grid.arrange(c5,c6,nrow=2, ncol=1)
influencePlot(model_Log_Reg_b)
spreadLevelPlot(model_Log_Reg_b)
avPlots(model_Log_Reg_b, id.n=2, id.cex=0.7)
residualPlots(model_Log_Reg_b)
model1.stepAIC <- stepAIC(model_Log_Reg_b,direction="backward")
leaps <- regsubsets(left ~ satisfaction_level +
last_evaluation +
number_project +
average_montly_hours +
time_spend_company +
Work_accident +
promotion_last_5years +
salary +
sales, data=training,
nbest = 1,                   # 1 best model for each number of predictors
method = "exhaustive",
nvmax = NULL                 # NULL for no limit on number of variables
)
summary(leaps)
par(mfrow=c(1,1))
plot(leaps,scale="adjr2")
exp(confint(model_Log_Reg_b,level=0.95,method="Wald"))
exp(confint.default(model_Log_Reg_b,level=0.95))
model_Log_Reg_b_int <- glm(left ~ satisfaction_level*last_evaluation*
number_project*average_montly_hours*
time_spend_company +
Work_accident +
promotion_last_5years +
salary +
sales,
data=training,family = binomial)
summary(model_Log_Reg_b)
anova(model_Log_Reg_b,model_Log_Reg_b_int,test="Chisq")
model_Log_Reg <- glm(left~ poly(satisfaction_level,    10) +
poly(last_evaluation,       10) +
poly(number_project,        5)  +
poly(average_montly_hours,  10) +
poly(time_spend_company,    5)  +
Work_accident          +
promotion_last_5years  +
sales                  +
salary,
data=training,family = binomial )
